from collections import namedtuple
import unittest
from lstm_word_segmentation.helpers import normalize_string


class TestScriptNormalizer(unittest.TestCase):
    def test_normalize_string(self):
        TestCase = namedtuple("TestCase", ["in_str", "scripts", "out_str"])
        cases = [
            TestCase("abc", ["Latn"], "abc"),
            TestCase("abc", [], "LLL"),
            TestCase("aëÑå", ["Latn", "Cakm"], "aëÑå"),
            TestCase("aëÑå", ["Latn"], "aëÑÉ"),
            TestCase("aëÑå", ["Cakm"], "LëÑå"),
            TestCase("aëÑå", [], "LëÑÉ"),
            # NOTE: ASCII digits have script Common, not Latin
            TestCase("123", ["Latn"], "000"),
            TestCase("·ÅÅ·ÅÅ·ÅÅ", ["Mymr"], "·ÅÅ·ÅÅ·ÅÅ"),
            TestCase("·ÅÅ·ÅÅ·ÅÅ", [], "·ÅÄ·ÅÄ·ÅÄ"),
            # NOTE: Currency symbols have script Common
            TestCase("‡∏ø100", ["Thai"], "$000"),
            TestCase("‡∏ø100", [], "$000"),
            TestCase("‡∏û‡∏±‡∏ô‡πÇ‡∏ó‡∏´‡∏ç‡∏¥‡∏á ‡∏™‡∏°‡πÄ‡∏î‡πá‡∏à‡∏û‡∏£‡∏∞‡∏ô‡∏≤‡∏á‡πÄ‡∏à‡πâ‡∏≤‡∏≠‡∏¥‡∏ô‡∏ó‡∏£‡∏®‡∏±‡∏Å‡∏î‡∏¥‡∏®‡∏à‡∏µ ‡∏û‡∏£‡∏∞‡∏ß‡∏£‡∏£‡∏≤‡∏ä‡∏ä‡∏≤‡∏¢‡∏≤ (‡∏û‡∏£‡∏∞‡∏ô‡∏≤‡∏°‡πÄ‡∏î‡∏¥‡∏°: ‡∏õ‡∏£‡∏∞‡πÑ‡∏û; 10 ‡∏°‡∏¥‡∏ñ‡∏∏‡∏ô‡∏≤‡∏¢‡∏ô ‡∏û.‡∏®. 2445 ‚Äî 30 ‡∏û‡∏§‡∏®‡∏à‡∏¥‡∏Å‡∏≤‡∏¢‡∏ô ‡∏û.‡∏®. 2518) ‡∏û‡∏£‡∏∞‡∏ß‡∏£‡∏£‡∏≤‡∏ä‡∏ä‡∏≤‡∏¢‡∏≤‡πÉ‡∏ô‡∏û‡∏£‡∏∞‡∏ö‡∏≤‡∏ó‡∏™‡∏°‡πÄ‡∏î‡πá‡∏à‡∏û‡∏£‡∏∞‡∏°‡∏á‡∏Å‡∏∏‡∏é‡πÄ‡∏Å‡∏•‡πâ‡∏≤‡πÄ‡∏à‡πâ‡∏≤‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏±‡∏ß", ["Thai"], "‡∏û‡∏±‡∏ô‡πÇ‡∏ó‡∏´‡∏ç‡∏¥‡∏á ‡∏™‡∏°‡πÄ‡∏î‡πá‡∏à‡∏û‡∏£‡∏∞‡∏ô‡∏≤‡∏á‡πÄ‡∏à‡πâ‡∏≤‡∏≠‡∏¥‡∏ô‡∏ó‡∏£‡∏®‡∏±‡∏Å‡∏î‡∏¥‡∏®‡∏à‡∏µ ‡∏û‡∏£‡∏∞‡∏ß‡∏£‡∏£‡∏≤‡∏ä‡∏ä‡∏≤‡∏¢‡∏≤ (‡∏û‡∏£‡∏∞‡∏ô‡∏≤‡∏°‡πÄ‡∏î‡∏¥‡∏°: ‡∏õ‡∏£‡∏∞‡πÑ‡∏û; 00 ‡∏°‡∏¥‡∏ñ‡∏∏‡∏ô‡∏≤‡∏¢‡∏ô ‡∏û.‡∏®. 0000 ‚Äî 00 ‡∏û‡∏§‡∏®‡∏à‡∏¥‡∏Å‡∏≤‡∏¢‡∏ô ‡∏û.‡∏®. 0000) ‡∏û‡∏£‡∏∞‡∏ß‡∏£‡∏£‡∏≤‡∏ä‡∏ä‡∏≤‡∏¢‡∏≤‡πÉ‡∏ô‡∏û‡∏£‡∏∞‡∏ö‡∏≤‡∏ó‡∏™‡∏°‡πÄ‡∏î‡πá‡∏à‡∏û‡∏£‡∏∞‡∏°‡∏á‡∏Å‡∏∏‡∏é‡πÄ‡∏Å‡∏•‡πâ‡∏≤‡πÄ‡∏à‡πâ‡∏≤‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏±‡∏ß"),
            TestCase("‡∏û‡∏±‡∏ô‡πÇ‡∏ó‡∏´‡∏ç‡∏¥‡∏á ‡∏™‡∏°‡πÄ‡∏î‡πá‡∏à‡∏û‡∏£‡∏∞‡∏ô‡∏≤‡∏á‡πÄ‡∏à‡πâ‡∏≤‡∏≠‡∏¥‡∏ô‡∏ó‡∏£‡∏®‡∏±‡∏Å‡∏î‡∏¥‡∏®‡∏à‡∏µ ‡∏û‡∏£‡∏∞‡∏ß‡∏£‡∏£‡∏≤‡∏ä‡∏ä‡∏≤‡∏¢‡∏≤ (‡∏û‡∏£‡∏∞‡∏ô‡∏≤‡∏°‡πÄ‡∏î‡∏¥‡∏°: ‡∏õ‡∏£‡∏∞‡πÑ‡∏û; 10 ‡∏°‡∏¥‡∏ñ‡∏∏‡∏ô‡∏≤‡∏¢‡∏ô ‡∏û.‡∏®. 2445 ‚Äî 30 ‡∏û‡∏§‡∏®‡∏à‡∏¥‡∏Å‡∏≤‡∏¢‡∏ô ‡∏û.‡∏®. 2518) ‡∏û‡∏£‡∏∞‡∏ß‡∏£‡∏£‡∏≤‡∏ä‡∏ä‡∏≤‡∏¢‡∏≤‡πÉ‡∏ô‡∏û‡∏£‡∏∞‡∏ö‡∏≤‡∏ó‡∏™‡∏°‡πÄ‡∏î‡πá‡∏à‡∏û‡∏£‡∏∞‡∏°‡∏á‡∏Å‡∏∏‡∏é‡πÄ‡∏Å‡∏•‡πâ‡∏≤‡πÄ‡∏à‡πâ‡∏≤‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏±‡∏ß", [], "‡∏ó‡∏±‡∏ó‡∏ó‡∏ó‡∏ó‡∏ó‡∏¥‡∏ó ‡∏ó‡∏ó‡∏ó‡∏ó‡πá‡∏ó‡∏ó‡∏ó‡∏ó‡∏ó‡∏ó‡∏ó‡∏ó‡∏ó‡πâ‡∏ó‡∏ó‡∏¥‡∏ó‡∏ó‡∏ó‡∏ó‡∏±‡∏ó‡∏ó‡∏¥‡∏ó‡∏ó‡∏µ ‡∏ó‡∏ó‡∏ó‡∏ó‡∏ó‡∏ó‡∏ó‡∏ó‡∏ó‡∏ó‡∏ó‡∏ó (‡∏ó‡∏ó‡∏ó‡∏ó‡∏ó‡∏ó‡∏ó‡∏ó‡∏¥‡∏ó: ‡∏ó‡∏ó‡∏ó‡∏ó‡∏ó; 00 ‡∏ó‡∏¥‡∏ó‡∏∏‡∏ó‡∏ó‡∏ó‡∏ó ‡∏ó.‡∏ó. 0000 ‚Äî 00 ‡∏ó‡∏ó‡∏ó‡∏ó‡∏¥‡∏ó‡∏ó‡∏ó‡∏ó ‡∏ó.‡∏ó. 0000) ‡∏ó‡∏ó‡∏ó‡∏ó‡∏ó‡∏ó‡∏ó‡∏ó‡∏ó‡∏ó‡∏ó‡∏ó‡∏ó‡∏ó‡∏ó‡∏ó‡∏ó‡∏ó‡∏ó‡∏ó‡∏ó‡∏ó‡∏ó‡∏ó‡πá‡∏ó‡∏ó‡∏ó‡∏ó‡∏ó‡∏ó‡∏ó‡∏∏‡∏ó‡∏ó‡∏ó‡∏ó‡πâ‡∏ó‡∏ó‡∏ó‡πâ‡∏ó‡∏ó‡∏ó‡∏π‡πà‡∏ó‡∏±‡∏ó"),
        ]
        for cas in cases:
            actual = normalize_string(cas.in_str, cas.scripts)
            self.assertEqual(cas.out_str, actual, cas)


if __name__ == "__main__":
    unittest.main()
